#!/bin/bash

function start_server() {
    if pgrep -f mapreduce-manager &> /dev/null || pgrep -f mapreduce-worker &> /dev/null; then
        echo "Error: mapreduce-manager is already running"
        exit 1
    fi

    mkdir -p var/log
    rm -f var/log/manager.log var/log/worker-6002.log var/log/worker-6001.log
    mapreduce-manager --host localhost --port 6000 --logfile var/log/manager.log &
    sleep 2  # give the Manager time to start
    mapreduce-worker --host localhost --port 6001 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6001.log &
    mapreduce-worker --host localhost --port 6002 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6002.log &
    echo "starting mapreduce ..."
}

function stop_server() {
    echo "stopping mapreduce ..."
    
    mapreduce-submit --shutdown --host localhost --port 6000 || true
    sleep 2  # give the Manager time to receive signal and send to Workers

    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "killing mapreduce manager ..."
        pkill -f mapreduce-manager || true
    fi
    if pgrep -f mapreduce-worker &> /dev/null; then
        echo "killing mapreduce worker ..."
        pkill -f mapreduce-worker || true
    fi
}

function server_status() {
    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "manager running"
        manager_status=0
    else
        echo "manager not running"
        manager_status=1
    fi

    if pgrep -f mapreduce-worker &> /dev/null; then
        echo "workers running"
        worker_status=0
    else
        echo "workers not running"
        worker_status=1
    fi

    if [[ $manager_status -eq 0 && $worker_status -eq 0 ]]; then
        exit 0
    else
        exit 1
    fi
}

function restart_server() {
    stop_server
    start_server
}

case "$1" in
    start)
        start_server
        ;;
    stop)
        stop_server
        ;;
    status)
        server_status
        ;;
    restart)
        restart_server
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
esac
